ALL_COMPONENTS = [ 'filesys', 'unittest' ]

def options(opt):
    opt.load('compiler_fc')
    opt.load('compiler_c')
    opt.load('m4fpp')


def configure(conf):
    conf.load('compiler_fc')
    conf.load('compiler_c')
    conf.load('m4fpp')
    configure_component_defines(conf)
    configure_fc_defines(conf)


def build(bld):
    libsources = bld.path.ant_glob('fortyxima.F90')
    if 'filesys' in bld.env.components:
        libsources += bld.path.ant_glob(['filesys/*.F90', 'filesys/*.c'])
    if 'unittest' in bld.env.components:
        libsources += bld.path.ant_glob(['unittest/*.F90'])
    bld(
        features="m4fpp c fc fcstlib",
        source=libsources,
        target="fortyxima",
        use=[ 'COMPONENTS', 'FCNAME' ]
    )


def configure_component_defines(conf):
    if conf.options.components:
        conf.env.components = [ s.lower() 
                                for s in conf.options.components.split(',') ]
    else:
        conf.env.components = ALL_COMPONENTS
    conf.env.DEFINES_COMPONENTS = [ 'WITH_{}'.format(s.upper()) 
                                    for s in conf.env.components ]
    

def configure_fc_defines(conf):
    conf.env.DEFINES_FCNAME = [ 'COMP_{}'.format(conf.env.FC_NAME) ]
